datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Review {
  comment   String?
  createdAt DateTime  @default(now())
  dateTime  DateTime?
  id        String    @id @default(cuid())
  rating    Int?
  shop      Shop?     @relation(fields: [shopId], references: [id])
  shopId    String?
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model Service {
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  description  String?
  duration     Int?
  id           String        @id @default(cuid())
  name         String?
  price        Float?
  shop         Shop?         @relation(fields: [shopId], references: [id])
  shopId       String?
  updatedAt    DateTime      @updatedAt
}

model Shop {
  address     String?
  contact     String?
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(cuid())
  name        String?
  owner       String?
  reviews     Review[]
  services    Service[]
  updatedAt   DateTime  @updatedAt
}

model Appointment {
  createdAt DateTime  @default(now())
  dateTime  DateTime?
  id        String    @id @default(cuid())
  service   Service?  @relation(fields: [serviceId], references: [id])
  serviceId String?
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  password     String
  reviews      Review[]
  role         EnumUserRole?
  roles        Json
  updatedAt    DateTime      @updatedAt
  username     String        @unique
}

enum EnumUserRole {
  Option1
}
