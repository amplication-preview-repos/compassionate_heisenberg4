/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { ReviewCreateNestedManyWithoutShopsInput } from "./ReviewCreateNestedManyWithoutShopsInput";
import { Type } from "class-transformer";
import { ServiceCreateNestedManyWithoutShopsInput } from "./ServiceCreateNestedManyWithoutShopsInput";

@InputType()
class ShopCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contact?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReviewCreateNestedManyWithoutShopsInput,
  })
  @ValidateNested()
  @Type(() => ReviewCreateNestedManyWithoutShopsInput)
  @IsOptional()
  @Field(() => ReviewCreateNestedManyWithoutShopsInput, {
    nullable: true,
  })
  reviews?: ReviewCreateNestedManyWithoutShopsInput;

  @ApiProperty({
    required: false,
    type: () => ServiceCreateNestedManyWithoutShopsInput,
  })
  @ValidateNested()
  @Type(() => ServiceCreateNestedManyWithoutShopsInput)
  @IsOptional()
  @Field(() => ServiceCreateNestedManyWithoutShopsInput, {
    nullable: true,
  })
  services?: ServiceCreateNestedManyWithoutShopsInput;
}

export { ShopCreateInput as ShopCreateInput };
